
#----------------------------------------------------------------------#
# FILE:    clam10                                                      #
# AUTHOR:  Douglas Roberts -- droberts                                 #
# CREATED: Sun Sep 15 09:51:05 EDT 2019                                #
# PURPOSE: perfect drawer.                                             #
#                                                                      #
#----------------------------------------------------------------------#


function wander
{
local _x _y

#----------------------------------------------------------------------#
# select new direction: N E W S NE NW SE SW                            #
#----------------------------------------------------------------------#
_x=0
_y=0

while [[ $_x -eq 0 && $_y -eq 0 ]]; do
    (( _x = ( RANDOM % 3 ) - 1 ))
    (( _y = ( RANDOM % 3 ) - 1 ))
done


#----------------------------------------------------------------------#
# if not going N or S, go 2 squares left or right.                     #
#----------------------------------------------------------------------#
if [[ $_y -eq 0 ]]; then
    (( _x = _x * 2 ))
fi

#----------------------------------------------------------------------#
# calculate new position                                               #
#----------------------------------------------------------------------#
(( xpos += _x ))
(( ypos += _y ))

#----------------------------------------------------------------------#
# boundary checking.                                                   #
# if we bump up against the sides, go the other way.                   #
#----------------------------------------------------------------------#
if [[ $ypos -lt 0 ]]; then
    ypos=1
fi

if [[ $ypos -gt $LINES ]]; then
    (( ypos -= 2 ))
fi

if [[ $xpos -lt 0 ]]; then
    xpos=1
fi

if [[ $xpos -gt $COLUMNS ]]; then
    (( xpos -= 2 ))
fi

tput cup $ypos $xpos
#----------------------------------------------------------------------#
# echo -n "@ "                                                         #
#----------------------------------------------------------------------#
next_color
#----------------------------------------------------------------------#
# ${fgs[x]}                                                            #
#----------------------------------------------------------------------#

#----------------------------------------------------------------------#
# echo -n "[${_g};5;${color_value}m@ [m"                             #
#----------------------------------------------------------------------#
#----------------------------------------------------------------------#
# echo -n "[${_g};5;${color_value}mï£¿ [m"                           #
#----------------------------------------------------------------------#
echo -n "[${_g};5;${color_value}m${_ball} [m"
#----------------------------------------------------------------------#
# echo -n "^[[${_g};5;${color_value}m@ ^[[m" ; sleep 1;                #
#----------------------------------------------------------------------#

return
}



function main_loop
{
local num=0
#----------------------------------------------------------------------#
# center the cursor                                                    #
#----------------------------------------------------------------------#
tput clear
(( xpos = COLUMNS / 2 ))
(( ypos = LINES / 2 ))
tput cup $ypos $xpos
compute_char_max
grab_colors_reduced_set $perma_color

#----------------------------------------------------------------------#
# MAIN WHILE LOOP                                                      #
#----------------------------------------------------------------------#
while [[ $num -lt ${char_max:-199} ]]; do
    wander
    (( num += 1 ))
done

#----------------------------------------------------------------------#
# fini and place the cursor at a good spot.                            #
#----------------------------------------------------------------------#
tput cup 0 0
return

(( l = LINES - 3 ))
tput cup $l 0
echo done
return
}



function loopty_loop
{
local num=0

while [[ $num -lt 22 ]]; do
    main_loop
    sleep 3
done
}



#----------------------------------------------------------------------#
# MAIN                                                                 #
#----------------------------------------------------------------------#
. colors.env

#----------------------------------------------------------------------#
# initialize color palette.
# pick a color scheme or not . . .                                     #
#----------------------------------------------------------------------#
case $1 in
    -h|--help)
        echo $0 '[color_idx|color_pattern_name] [bg|fg|38|48]'
	exit
	;;
esac

#----------------------------------------------------------------------#
# deal with foreground/background coloring                             #
#----------------------------------------------------------------------#
case ${2:-not-set} in
    38|f|fg|fore*) _g=38 ;; # for light terminals
    48|b|bg|back*) _g=48 ;; # for dark terminals
    *) _g=38 ;; # guess
esac
    
perma_color=$1
#----------------------------------------------------------------------#
# . yaps1                                                              #
#----------------------------------------------------------------------#
_ball=â¬¤

loopty_loop

