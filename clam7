#!/bin/bash
#----------------------------------------------------------------------#
# FILE:    clam                                                        #
# AUTHOR:  Douglas Roberts -- droberts                                 #
# CREATED: Tue Mar 19 09:30:00 EDT 2019                                #
# PURPOSE: basic scribbler.                                            #
#                                                                      #
#----------------------------------------------------------------------#


. colors.env


function print_char
{
tput cup $ypos $xpos
if [[ $xpos -ge $pound_fgs ]]; then
    (( idx = xpos % pound_fgs ))
else
    idx=$xpos
fi
cval=${fgs[$idx]}
echo -n "[${_g};5;${cval}m@ "
}





function boundary_check
{
#----------------------------------------------------------------------#
# calculate new position                                               #
#----------------------------------------------------------------------#
(( xpos += _x ))
(( ypos += _y ))

#----------------------------------------------------------------------#
# boundary checking.                                                   #
# if we bump up against the sides, go the other way.                   #
#----------------------------------------------------------------------#
if [[ $ypos -lt 0 ]]; then
    ypos=1
fi

if [[ $ypos -ge $LINES ]]; then
    (( ypos -= 2 ))
fi

if [[ $xpos -lt 0 ]]; then
    xpos=1
fi

if [[ $xpos -ge $COLUMNS ]]; then
    (( xpos -= 2 ))
fi

return
}



function wander
{
local _x _y

#----------------------------------------------------------------------#
# select new direction: N E W S NE NW SE SW                            #
#----------------------------------------------------------------------#
_x=0
_y=0

while [[ $_x -eq 0 && $_y -eq 0 ]]; do
        (( _x = ( RANDOM % 3 ) - 1 ))
        (( _y = ( RANDOM % 3 ) - 1 ))
done


#----------------------------------------------------------------------#
# if not going N or S, go 2 squares left or right.                     #
#----------------------------------------------------------------------#
ew_ind=0
if [[ $_y -eq 0 ]]; then
    (( _x = _x * 2 ))
fi

boundary_check
print_char

#----------------------------------------------------------------------#
# if going east or west, print 2 characters.                           #
#----------------------------------------------------------------------#
if [[ $ew_ind -eq 1 ]]; then
    (( _x = _x * 2 ))
    boundary_check
    print_char
fi
    
return
}



function main_loop
{
local num=0
local max=150 # seems to look best.

#----------------------------------------------------------------------#
# center the cursor                                                    #
#----------------------------------------------------------------------#
tput clear
(( xpos = COLUMNS / 2 ))
(( ypos = LINES / 2 ))
tput cup $ypos $xpos

#----------------------------------------------------------------------#
# MAIN WHILE LOOP                                                      #
#----------------------------------------------------------------------#
while [[ $num -lt $max ]]; do
    wander
    (( num += 1 ))
done

#----------------------------------------------------------------------#
# fini and place the cursor at a good spot.                            #
#----------------------------------------------------------------------#
tput cup 0 0
return
}


function loopty_loop
{
local num=0

while [[ $num -lt 22 ]]; do
    grab_colors
    main_loop
    sleep 2
done
}


#----------------------------------------------------------------------#
# MAIN                                                                 #
#----------------------------------------------------------------------#
. colors.env
. yaps1
_g=48 # for light terminals
_g=38 # for dark terminals

#----------------------------------------------------------------------#
# pick a random color scheme . . .                                     #
#----------------------------------------------------------------------#
loopty_loop

